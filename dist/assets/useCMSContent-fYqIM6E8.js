import{u as w,r as l}from"./index-CAm8ThRU.js";const S={en:{"privacy-policy-title":{id:"1",slug:"privacy-policy-title",title:"Privacy Policy",content:"Privacy Policy",language:"en",published:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},"terms-of-service-title":{id:"2",slug:"terms-of-service-title",title:"Terms of Service",content:"Terms of Service",language:"en",published:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},"cancellation-policy-title":{id:"3",slug:"cancellation-policy-title",title:"Cancellation Policy",content:"Cancellation Policy",language:"en",published:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}}},d={async getContent(t,r="en"){var e;try{return((e=S[r])==null?void 0:e[t])||null}catch(n){return console.error("Error in getContent:",n),null}},async getMultipleContent(t,r="en"){try{return t.map(e=>{var n;return(n=S[r])==null?void 0:n[e]}).filter(e=>e!==void 0)}catch(e){return console.error("Error in getMultipleContent:",e),[]}},async getAllContent(t="en"){try{return Object.values(S[t]||{})}catch(r){return console.error("Error in getAllContent:",r),[]}},parseJsonContent(t){try{return JSON.parse(t)}catch{return t}},async getContentWithFallback(t,r="en",e="en"){let n=await this.getContent(t,r);return!n&&r!==e&&(n=await this.getContent(t,e)),n}},M=(t,r={})=>{const{i18n:e,t:n}=w(),[C,u]=l.useState(null),[g,f]=l.useState(null),[p,i]=l.useState(!0),[h,s]=l.useState(null),{fallbackLanguage:c="en",fallbackTranslationKey:a}=r;return l.useEffect(()=>{(async()=>{i(!0),s(null);try{const o=await d.getContentWithFallback(t,e.language,c);if(o)u(o.content),f(o.title);else if(a)u(n(a)),f(n(a));else throw new Error(`Content not found for slug: ${t}`)}catch(o){console.error("Error fetching content:",o),s("Failed to load content"),a&&(u(n(a)),f(n(a)))}finally{i(!1)}})()},[t,e.language,c,n,a]),{content:C,title:g,isLoading:p,error:h}},v=(t,r={})=>{const{i18n:e}=w(),[n,C]=l.useState(new Map),[u,g]=l.useState(!0),[f,p]=l.useState(null),{fallbackLanguage:i="en"}=r;return l.useEffect(()=>{const s=async()=>{g(!0),p(null);try{const c=await d.getMultipleContent(t,e.language),a=t.filter(o=>!c.find(m=>m.slug===o));if(a.length>0&&e.language!==i){const o=await d.getMultipleContent(a,i);c.push(...o)}const y=new Map;c.forEach(o=>{y.set(o.slug,o)}),C(y)}catch(c){console.error("Error fetching multiple content:",c),p("Failed to load content")}finally{g(!1)}};t.length>0?s():g(!1)},[t,e.language,i]),{contentMap:n,isLoading:u,error:f,getContentBySlug:s=>n.get(s),content:n}};export{M as a,v as u};
