import{b as h,u as m,r as s}from"./index-CDJvYQCk.js";const d={async getContent(e,r="en"){try{const{data:t,error:n}=await h.from("cms_content").select("*").eq("slug",e).eq("language",r).eq("published",!0).single();return n?(console.error("Error fetching content:",n),null):t}catch(t){return console.error("Error in getContent:",t),null}},async getMultipleContent(e,r="en"){try{const{data:t,error:n}=await h.from("cms_content").select("*").in("slug",e).eq("language",r).eq("published",!0);return n?(console.error("Error fetching multiple content:",n),[]):t||[]}catch(t){return console.error("Error in getMultipleContent:",t),[]}},async getAllContent(e="en"){try{const{data:r,error:t}=await h.from("cms_content").select("*").eq("language",e).eq("published",!0).order("slug");return t?(console.error("Error fetching all content:",t),[]):r||[]}catch(r){return console.error("Error in getAllContent:",r),[]}},async upsertContent(e){try{const{data:r,error:t}=await h.from("cms_content").upsert(e,{onConflict:"slug,language"}).select().single();return t?(console.error("Error upserting content:",t),null):r}catch(r){return console.error("Error in upsertContent:",r),null}},parseJsonContent(e){try{return JSON.parse(e)}catch{return e}},async getContentWithFallback(e,r="en",t="en"){let n=await this.getContent(e,r);return!n&&r!==t&&(n=await this.getContent(e,t)),n}},M=(e,r={})=>{const{i18n:t,t:n}=m(),[p,i]=s.useState(null),[g,f]=s.useState(null),[C,c]=s.useState(!0),[E,u]=s.useState(null),{fallbackLanguage:l="en",fallbackTranslationKey:a}=r;return s.useEffect(()=>{(async()=>{c(!0),u(null);try{const o=await d.getContentWithFallback(e,t.language,l);if(o)i(o.content),f(o.title);else if(a)i(n(a)),f(n(a));else throw new Error(`Content not found for slug: ${e}`)}catch(o){console.error("Error fetching content:",o),u("Failed to load content"),a&&(i(n(a)),f(n(a)))}finally{c(!1)}})()},[e,t.language,l,n,a]),{content:p,title:g,isLoading:C,error:E}},b=(e,r={})=>{const{i18n:t}=m(),[n,p]=s.useState(new Map),[i,g]=s.useState(!0),[f,C]=s.useState(null),{fallbackLanguage:c="en"}=r;return s.useEffect(()=>{const u=async()=>{g(!0),C(null);try{const l=await d.getMultipleContent(e,t.language),a=e.filter(o=>!l.find(w=>w.slug===o));if(a.length>0&&t.language!==c){const o=await d.getMultipleContent(a,c);l.push(...o)}const y=new Map;l.forEach(o=>{y.set(o.slug,o)}),p(y)}catch(l){console.error("Error fetching multiple content:",l),C("Failed to load content")}finally{g(!1)}};e.length>0?u():g(!1)},[e,t.language,c]),{contentMap:n,isLoading:i,error:f,getContentBySlug:u=>n.get(u),content:n}};export{M as a,b as u};
